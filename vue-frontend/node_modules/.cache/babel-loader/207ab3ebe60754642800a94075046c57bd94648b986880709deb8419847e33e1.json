{"ast":null,"code":"import OrdenService from '@/services/OrdenService';\nexport default {\n  name: '',\n  data() {\n    return {\n      ordenes: [],\n      token: '',\n      requestCompleteOrdenesByEstado: false,\n      id: '',\n      estadoInput: '',\n      nuevaOrden: {}\n    };\n  },\n  methods: {\n    async getOrdenes() {\n      try {\n        this.ordenes = await OrdenService.getOrdenes(this.token);\n        this.requestCompleteOrdenesByEstado = true;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAiBA,OAAOA,YAAW,MAAO,yBAAyB;AAElD,eAAe;EACXC,IAAI,EAAE,EAAE;EACRC,IAAI,GAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,8BAA8B,EAAE,KAAK;MACrCC,EAAE,EAAE,EAAE;MACNC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,CAEZ;IAEJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAU,GAAG;MACf,IAAI;QACA,IAAI,CAACP,OAAM,GAAI,MAAMH,YAAY,CAACU,UAAU,CAAC,IAAI,CAACN,KAAK;QACvD,IAAI,CAACC,8BAA6B,GAAI,IAAI;MAC9C,EAAE,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ;EACJ;AAEJ","names":["OrdenService","name","data","ordenes","token","requestCompleteOrdenesByEstado","id","estadoInput","nuevaOrden","methods","getOrdenes","error","console"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/OrdenPesajeInicial.vue"],"sourcesContent":["<template>\n    <div class=\"container\" v-if=\"!requestCompleteCrearOrdenes\">\n        <table>\n            <tr>\n                <td>Token Generated:</td>\n                <td><input id=\"input_token\" type=\"text\" v-model=\"token\" /></td>\n            </tr>\n            \n            <tr>\n                <td>Peso Inicial:</td>\n                <td><input type=\"date\" v-model=\"nuevaOrden.fechaRecepcion\" /></td>\n            </tr>\n        </table>\n    </div>\n</template>\n\n<script>\nimport OrdenService from '@/services/OrdenService';\n\nexport default {\n    name: '',\n    data() {\n        return {\n            ordenes: [],\n            token: '',\n            requestCompleteOrdenesByEstado: false,\n            id: '',\n            estadoInput: '',\n            nuevaOrden: {\n\n            }\n\n        }\n    },\n    methods: {\n        async getOrdenes() {\n            try {\n                this.ordenes = await OrdenService.getOrdenes(this.token)\n                this.requestCompleteOrdenesByEstado = true;\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    },\n\n}\n\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}