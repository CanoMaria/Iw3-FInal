{"ast":null,"code":"import OrdenService from '@/services/OrdenService';\nexport default {\n  name: '',\n  data() {\n    return {\n      ordenes: [],\n      token: '',\n      requestCompleteCrearOrdenes: false,\n      id: ''\n    };\n  },\n  methods: {\n    async createOrden() {\n      try {\n        // Obtener un token llamando al método \"getTokens\" importado\n\n        // Llamar al método \"createOrden\" del servicio de orden, pasando la nueva orden y el token como parámetros\n        this.ordenCreada = await OrdenService.createOrden(this.nuevaOrden, this.token);\n        console.log('Orden creada correctamente:', ordenCreada);\n        this.requestCompleteCrearOrdenes = true;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n  // created(){\n  //      this.getCamiones()\n  // }\n};","map":{"version":3,"mappings":"AAuCA,OAAOA,YAAW,MAAO,yBAAyB;AAElD,eAAe;EACXC,IAAI,EAAE,EAAE;EACRC,IAAI,GAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,2BAA2B,EAAE,KAAK;MAClCC,EAAE,EAAE;IAER;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,WAAW,GAAG;MAChB,IAAI;QACA;;QAEA;QACA,IAAI,CAACC,WAAU,GAAI,MAAMT,YAAY,CAACQ,WAAW,CAAC,IAAI,CAACE,UAAU,EAAE,IAAI,CAACN,KAAK,CAAC;QAC9EO,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,WAAW,CAAC;QACvD,IAAI,CAACJ,2BAA0B,GAAI,IAAI;MAC3C,EAAE,OAAOQ,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ;EACJ;EACA;EACA;EACA;AAEJ","names":["OrdenService","name","data","ordenes","token","requestCompleteCrearOrdenes","id","methods","createOrden","ordenCreada","nuevaOrden","console","log","error"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/OrdenCreate.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h1>Nueva orden</h1>\n\n        <label>Fecha de recepción:</label>\n        <input type=\"date\" v-model=\"nuevaOrden.fechaRecepcion\" />\n\n        <label>Razón social del cliente:</label>\n        <input type=\"text\" v-model=\"nuevaOrden.cliente.razonSocial\" />\n\n        <label>Contacto del cliente:</label>\n        <input type=\"text\" v-model=\"nuevaOrden.cliente.contacto\" />\n\n        ...\n\n        <label>Descripción del camión:</label>\n        <input type=\"text\" v-model=\"nuevaOrden.camion.descripcion\" />\n\n        <label>Patente del camión:</label>\n        <input type=\"text\" v-model=\"nuevaOrden.camion.patente\" />\n\n        ...\n\n        <label>Apellido del chofer:</label>\n        <input type=\"text\" v-model=\"nuevaOrden.chofer.apellido\" />\n\n        <label>Documento del chofer:</label>\n        <input type=\"text\" v-model=\"nuevaOrden.chofer.documento\" />\n\n        <label>Nombre del chofer:</label>\n        <input type=\"text\" v-model=\"nuevaOrden.chofer.nombre\" />\n\n        ...\n\n        <button @click=\"createOrden\">Crear orden</button>\n    </div>\n</template>\n\n<script>\nimport OrdenService from '@/services/OrdenService';\n\nexport default {\n    name: '',\n    data() {\n        return {\n            ordenes: [],\n            token: '',\n            requestCompleteCrearOrdenes: false,\n            id: '',\n\n        }\n    },\n    methods: {\n        async createOrden() {\n            try {\n                // Obtener un token llamando al método \"getTokens\" importado\n\n                // Llamar al método \"createOrden\" del servicio de orden, pasando la nueva orden y el token como parámetros\n                this.ordenCreada = await OrdenService.createOrden(this.nuevaOrden, this.token);\n                console.log('Orden creada correctamente:', ordenCreada);\n                this.requestCompleteCrearOrdenes = true;\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    },\n    // created(){\n    //      this.getCamiones()\n    // }\n\n}\n\n</script>\n\n<style>\n.container {\n    margin: 0 auto;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}