{"ast":null,"code":"import OrdenService from '@/services/OrdenService';\nexport default {\n  name: '',\n  data() {\n    return {\n      token: '',\n      requestCompleteCrearOrdenes: false,\n      nuevaOrden: {\n        \"fechaRecepcion\": \"2022-11-18\",\n        \"cliente\": {\n          \"razonSocial\": \"RazonSocialTest1\",\n          \"contacto\": \"3517736362\"\n        },\n        \"camion\": {\n          \"cisternado\": [\"111\", \"222\", \"333\"],\n          \"descripcion\": \"DescrCamionTest1\",\n          \"patente\": \"CAM567041\"\n        },\n        \"chofer\": {\n          \"apellido\": \"ApellidoChoferTest1\",\n          \"documento\": \"37689712\",\n          \"nombre\": \"NombreChoferTest1\"\n        },\n        \"alerta\": {\n          \"mail\": \"[ayecano98@gmail.com]\",\n          \"temperaturaMax\": \"50\"\n        },\n        \"producto\": {\n          \"descripcion\": \"DescriProdTest1\",\n          \"nombre\": \"NombreProdTest1\"\n        },\n        \"codigoExterno\": \"900\"\n      }\n    };\n  },\n  methods: {\n    async createOrden() {\n      try {\n        // Obtener un token llamando al método \"getTokens\" importado\n\n        // Llamar al método \"createOrden\" del servicio de orden, pasando la nueva orden y el token como parámetros\n        this.nuevaOrden = await OrdenService.createOrden(this.nuevaOrden, this.token);\n        console.log('Orden creada correctamente:', this.nuevaOrden);\n        this.requestCompleteCrearOrdenes = true;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n  // created(){\n  //      this.getCamiones()\n  // }\n};","map":{"version":3,"mappings":"AAkGA,OAAOA,YAAW,MAAO,yBAAyB;AAElD,eAAe;EACXC,IAAI,EAAE,EAAE;EACRC,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,2BAA2B,EAAE,KAAK;MAClCC,UAAU,EAAE;QACR,gBAAgB,EAAE,YAAY;QAC9B,SAAS,EAAE;UACP,aAAa,EAAE,kBAAkB;UACjC,UAAU,EAAE;QAChB,CAAC;QACD,QAAQ,EAAE;UACN,YAAY,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;UACnC,aAAa,EAAE,kBAAkB;UACjC,SAAS,EAAE;QACf,CAAC;QACD,QAAQ,EAAE;UACN,UAAU,EAAE,qBAAqB;UACjC,WAAW,EAAE,UAAU;UACvB,QAAQ,EAAE;QACd,CAAC;QACD,QAAQ,EAAE;UACN,MAAM,EAAE,uBAAuB;UAC/B,gBAAgB,EAAE;QACtB,CAAC;QACD,UAAU,EAAE;UACR,aAAa,EAAE,iBAAiB;UAChC,QAAQ,EAAE;QACd,CAAC;QACD,eAAe,EAAE;MACrB;IAGJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,WAAW,GAAG;MAChB,IAAI;QACA;;QAEA;QACA,IAAI,CAACF,UAAS,GAAI,MAAML,YAAY,CAACO,WAAW,CAAC,IAAI,CAACF,UAAU,EAAE,IAAI,CAACF,KAAK,CAAC;QAC7EK,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACJ,UAAU,CAAC;QAC3D,IAAI,CAACD,2BAA0B,GAAI,IAAI;MAC3C,EAAE,OAAOM,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ;EACJ;EACA;EACA;EACA;AAEJ","names":["OrdenService","name","data","token","requestCompleteCrearOrdenes","nuevaOrden","methods","createOrden","console","log","error"],"sourceRoot":"","sources":["/home/nicolas/Downloads/repos/Iw3-FInal/vue-frontend/src/components/OrdenCreate.vue"],"sourcesContent":["<template>\n    <div class=\"container\" v-if=\"!requestCompleteCrearOrdenes\">\n        <table>\n            <tr>\n                <td>Input Token Generated:</td>\n                <td><input id=\"input_token\" type=\"text\" v-model=\"token\" /></td>\n            </tr>\n            \n            <tr>\n                <td>Fecha de recepción:</td>\n                <td><input type=\"date\" v-model=\"nuevaOrden.fechaRecepcion\" /></td>\n            </tr>\n\n            <tr>\n                <td>Razón social del cliente:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.cliente.razonSocial\" /></td>\n            </tr>\n\n            <tr>\n                <td>Contacto del cliente:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.cliente.contacto\" /></td>\n            </tr>\n\n            ...\n\n            <tr>\n                <td>Cisternado del camión:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.camion.cisternado\" /></td>\n            </tr>\n\n            <tr>\n                <td>Descripción del camión:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.camion.descripcion\" /></td>\n            </tr>\n\n            <tr>\n                <td>Patente del camión:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.camion.patente\" /></td>\n            </tr>\n\n            ...\n\n            <tr>\n                <td>Apellido del chofer:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.chofer.apellido\" /></td>\n            </tr>\n\n            <tr>\n                <td>Documento del chofer:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.chofer.documento\" /></td>\n            </tr>\n\n            <tr>\n                <td>Nombre del chofer:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.chofer.nombre\" /></td>\n            </tr>\n\n            ...\n\n            <tr>\n                <td>Email para Alerta:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.alerta.mail\" /></td>\n            </tr>\n\n            <tr>\n                <td>Temperatura Max:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.alerta.temperaturaMax\" /></td>\n            </tr>\n\n            ...\n\n            <tr>\n                <td>Nombre del producto:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.producto.nombre\" /></td>\n            </tr>\n\n            <tr>\n                <td>Descripción del producto:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.producto.descripcion\" /></td>\n            </tr>\n            ...\n\n            <tr>\n                <td>Código externo:</td>\n                <td><input type=\"text\" v-model=\"nuevaOrden.codigoExterno\" /></td>\n            </tr>\n\n            <tr>\n                <td><button @click=\"createOrden\">Crear orden</button></td>\n            </tr>\n        </table>\n\n        <p v-if=\"requestCompleteCrearOrdenes\">La petición se completó exitosamente</p>\n\n    </div>\n</template>\n\n<script>\nimport OrdenService from '@/services/OrdenService';\n\nexport default {\n    name: '',\n    data() {\n        return {\n            token: '',\n            requestCompleteCrearOrdenes: false,\n            nuevaOrden: {\n                \"fechaRecepcion\": \"2022-11-18\",\n                \"cliente\": {\n                    \"razonSocial\": \"RazonSocialTest1\",\n                    \"contacto\": \"3517736362\"\n                },\n                \"camion\": {\n                    \"cisternado\": [\"111\", \"222\", \"333\"],\n                    \"descripcion\": \"DescrCamionTest1\",\n                    \"patente\": \"CAM567041\"\n                },\n                \"chofer\": {\n                    \"apellido\": \"ApellidoChoferTest1\",\n                    \"documento\": \"37689712\",\n                    \"nombre\": \"NombreChoferTest1\"\n                },\n                \"alerta\": {\n                    \"mail\": \"[ayecano98@gmail.com]\",\n                    \"temperaturaMax\": \"50\"\n                },\n                \"producto\": {\n                    \"descripcion\": \"DescriProdTest1\",\n                    \"nombre\": \"NombreProdTest1\"\n                },\n                \"codigoExterno\": \"900\"\n            }\n\n\n        }\n    },\n    methods: {\n        async createOrden() {\n            try {\n                // Obtener un token llamando al método \"getTokens\" importado\n\n                // Llamar al método \"createOrden\" del servicio de orden, pasando la nueva orden y el token como parámetros\n                this.nuevaOrden = await OrdenService.createOrden(this.nuevaOrden, this.token);\n                console.log('Orden creada correctamente:', this.nuevaOrden);\n                this.requestCompleteCrearOrdenes = true;\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    },\n    // created(){\n    //      this.getCamiones()\n    // }\n\n}\n\n</script>\n\n<style>\n.container {\n    margin: 0 auto;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}